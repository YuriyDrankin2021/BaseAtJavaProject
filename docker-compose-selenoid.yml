version: '3'

#networks:
#  selenoid:
#networks:
#  selenoid:
#    external:
#      name: selenoid # This assumes network is already created

services:
  selenoid:
    image: "aerokube/selenoid:latest-release"
    container_name: selenoid
    network_mode: bridge
    ports:
      - "4444:4444"
    volumes:
      - ./selenoid/config:/etc/selenoid/:ro
      - ./selenoid:/etc/selenoid
      - ./selenoid/video:/opt/selenoid/video
      - ./selenoid/logs:/opt/selenoid/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: [ "-conf", "/etc/selenoid/browsers.json", "-limit", "10", "-retry-count", "2", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-max-timeout", "20m0s", "-session-attempt-timeout", "15m", "-timeout", "10m",  "-service-startup-timeout", "10m"]
#    command: [ "-conf", "/etc/selenoid/browsers.json", "-limit", "10", "-retry-count", "2", "-max-timeout", "20m0s", "-session-attempt-timeout", "15m", "-timeout", "10m",  "-service-startup-timeout", "10m"]
  #    command: [ "-conf", "/etc/selenoid/browsers.json", "-container-network", "selenoid", "-limit", "10", "-retry-count", "2" ]

  #    networks:
  #      selenoid: null

  selenoid-ui:
    image: "aerokube/selenoid-ui:latest-release"
    container_name: selenoid-ui
    network_mode: bridge
    ports:
      - "8080:8080"
    links:
      - selenoid
    command: [ "--selenoid-uri", "http://selenoid:4444" ]
    depends_on:
      - selenoid
#    networks:
#      selenoid: null

